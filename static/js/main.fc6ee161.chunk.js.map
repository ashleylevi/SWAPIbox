{"version":3,"sources":["cardImages.js","components/Card/Card.js","components/CardContainer/CardContainer.js","components/Header/Header.js","components/Nav/Nav.js","components/ScrollingText/ScrollingText.js","components/Home/Home.js","helpers/apiCalls.js","helpers/Helper.js","components/App/App.js","index.js"],"names":["cardImages","Luke Skywalker","C-3PO","R2-D2","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Alderaan","AT-AT","AT-ST","Bespin","Coruscant","Dagobah","Endor","Geonosis","Hoth","Kamino","Naboo","Sail barge","Sand Crawler","Snowspeeder","Storm IV Twin-Pod cloud car","T-16 skyhopper","TIE bomber","TIE/LN starfighter","X-34 landspeeder","Yavin IV","Card","_ref","cardData","toggleFavorite","card","keys","Object","image","entries","find","imageEntry","name","listItems","map","listItem","react_default","a","createElement","className","key","length","residents","join","style","backgroundImage","concat","onClick","isFavorite","CardContainer","displayData","cardCount","displayCards","Card_Card_Card","id","Header","src","alt","NavLink","activeStyle","color","to","Nav","fetchData","ScrollingText","title","release_date","opening_crawl","episode_id","Home","props","displayFavorites","currentFilm","Header_Header_Header","Nav_Nav_Nav","ScrollingText_ScrollingText_ScrollingText","fetchFilms","asyncToGenerator","regenerator_default","mark","_callee","response","films","wrap","_context","prev","next","fetch","sent","ok","json","abrupt","Error","stop","this","apply","arguments","fetchPeople","_ref2","_callee2","people","_context2","fetchVehicles","_ref3","_callee3","vehicles","_context3","fetchPlanets","_ref4","_callee4","planets","_context4","getRandomFilm","filmArray","Math","floor","random","cleanPeopleData","peopleArray","person","homeworld","species","fetches","parsedResponses","parsedData","homeworldObj","speciesObj","Promise","all","population","category","_x2","_x","cleanVehicleData","vehiclesArray","vehicle","model","class","vehicle_class","passengers","_x4","_x3","cleanPlanetsData","_ref5","_callee7","planetsArray","_context7","_ref6","_callee6","planet","promisedPeople","resolvedResidents","_context6","_ref7","_callee5","resident","data","_context5","_x7","terrain","climate","_x6","_x5","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","_this$state","state","target","setPeopleData","setPlanetsData","setVehicleData","setState","API","loadPeopleData","results","t0","console","log","message","loadPlanetData","vehicleArray","loadVehicleData","loadFilmData","filmsArray","Helper","storeArrayData","filmCount","count","array","localStorage","setItem","JSON","stringify","getStoredData","forEach","getItem","parse","defineProperty","cardObject","objectSpread","_this$state2","favPeople","filter","favPlanets","favVehicles","toConsumableArray","errorStatus","buttonName","_context8","_this2","_this$state3","favorites","Route","path","render","_ref8","match","params","Home_Home","CardContainer_CardContainer_CardContainer","Component","router","BrowserRouter","components_App_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fc6ee161.chunk.js","sourcesContent":["const cardImages = {\n \"Luke Skywalker\": \"./luke.png\",\n \"C-3PO\": \"./c3p0.png\",\n \"R2-D2\": \"./r2d2.png\",\n \"Darth Vader\": \"./darthvader.png\",\n \"Leia Organa\": \"./leia.png\",\n \"Owen Lars\": \"./owen.png\",\n \"Beru Whitesun lars\": \"./beru.png\",\n \"R5-D4\": \"./r5d4.png\",\n \"Biggs Darklighter\": \"./bigg.png\",\n \"Obi-Wan Kenobi\": \"./obiwan.png\",\n \"Alderaan\": \"./alderaan.png\",\n \"AT-AT\": \"./atat.png\",\n \"AT-ST\": \"./atst.png\",\n \"Bespin\": \"./bespin.png\",\n \"Coruscant\": \"./coruscant.png\",\n \"Dagobah\": \"./dagobah.png\",\n \"Endor\":\"./endor.png\",\n \"Geonosis\": \"./geonosis.png\",\n \"Hoth\": \"./hoth.png\",\n 'Kamino': \"./kamino.png\",\n \"Naboo\": \"naboo.png\",\n \"Sail barge\": \"./sailbarge.png\",\n \"Sand Crawler\": \"./sandcrawler.png\",\n \"Snowspeeder\": \"./snowspeeder.png\",\n \"Storm IV Twin-Pod cloud car\": './cloudcar.png',\n \"T-16 skyhopper\": \"./t16skyhopper.png\",\n \"TIE bomber\": \"./tiebomber.png\",\n \"TIE/LN starfighter\": \"./tiefighter.png\",\n \"X-34 landspeeder\": \"./x34landspeeder.png\",\n \"Yavin IV\": \"./yavin4.png\"\n}\n\nexport default cardImages;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cardImages from '../../cardImages';\nimport './Card.css';\n\nexport const Card = ({ cardData, toggleFavorite }) => {\n  const card = cardData;\n  const keys = Object.keys(cardData);\n  const cardImagesEntries = Object.entries(cardImages);\n  const matchedImage = cardImagesEntries.find(imageEntry => {\n    return card.name === imageEntry[0];\n  });\n\n  const image = matchedImage[1];\n\n  const listItems = keys.map(listItem => {\n    if (listItem === 'name') {\n      return (\n        <li className=\"name\" key={listItem}>\n          {cardData[listItem]}\n        </li>\n      );\n    }\n\n    if (listItem === 'residents') {\n      if (cardData[listItem].length > 0) {\n        const residents = cardData[listItem].join(', ');\n        return (\n          <li className=\"info\" key={listItem}>\n            {listItem}: {residents}\n          </li>\n        );\n      } else if (cardData[listItem].length === 0) {\n        return (\n          <li className=\"info\" key={listItem}>\n            {listItem}: none\n          </li>\n        );\n      }\n    }\n    if (listItem !== 'isFavorite' && listItem !== 'category') {\n      return (\n        <li className=\"info\" key={listItem}>\n          {listItem}: {cardData[listItem]}\n        </li>\n      );\n    }\n  });\n\n  return (\n    <div className=\"card\" style={{ backgroundImage: `url(${image})` }}>\n      <div className=\"overlay\" />\n      <div className=\"button-div\">\n        <button className=\"fave-button\" onClick={() => toggleFavorite(card)}>\n          <i\n            className={card.isFavorite ? 'fas fa-star two' : 'far fa-star one'}\n          />\n        </button>\n      </div>\n      <div className=\"list-container\">\n        <ul className=\"info-section\">{listItems}</ul>\n      </div>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  cardData: PropTypes.object,\n  id: PropTypes.string,\n  toggleFavorite: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Card } from '../Card/Card';\nimport './CardContainer.css';\n\nexport const CardContainer = ({ displayData, toggleFavorite, cardCount }) => {\n  const displayCards = displayData.map(card => {\n    return (\n      <Card\n        cardData={card}\n        key={card.name}\n        id={card.name}\n        toggleFavorite={toggleFavorite}\n      />\n    );\n  });\n\n  if (cardCount === 0) {\n    return (\n      <div>\n        <h1 className=\"no-favs\">NO FAVORITES ADDED YET!</h1>\n      </div>\n    );\n  } else {\n    return <div className=\"card-container\">{displayCards}</div>;\n  }\n};\n\nCardContainer.propTypes = {\n  displayData: PropTypes.array,\n  toggleFavorite: PropTypes.func,\n  cardCount: PropTypes.number\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './Header.css';\n\nexport const Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"img-div\">\n        <img className=\"header-pic\" src=\"./vadarnew.png\" alt=\"darth-vader\" />\n      </div>\n      <NavLink className=\"main-title\" activeStyle={{ color: '#b99500' }} to=\"/home\" name=\"home\">\n        SWAPi Box\n      </NavLink>\n    </div>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport './Nav.css';\n\nexport const Nav = ({ fetchData, cardCount }) => {\n  return (\n    <div>\n      <section className=\"nav\">\n        <button className=\"nav-button\">\n          <NavLink\n            className=\"link\"\n            to=\"/people\"\n            name=\"people\"\n            activeStyle={{ color: '#b99500' }}\n            onClick={fetchData}\n          >\n            PEOPLE\n          </NavLink>\n        </button>\n        <button className=\"nav-button\">\n          <NavLink\n            className=\"link\"\n            to=\"/planets\"\n            name=\"planets\"\n            activeStyle={{ color: '#b99500' }}\n            onClick={fetchData}\n          >\n            PLANETS\n          </NavLink>\n        </button>\n        <button className=\"nav-button\">\n          <NavLink\n            className=\"link\"\n            to=\"/vehicles\"\n            name=\"vehicles\"\n            activeStyle={{ color: '#b99500' }}\n            onClick={fetchData}\n          >\n            VEHICLES\n          </NavLink>\n        </button>\n        <button className=\"nav-button\">\n          <NavLink\n            className=\"link\"\n            to=\"/favorites\"\n            name=\"favorites\"\n            activeStyle={{ color: '#b99500' }}\n            onClick={fetchData}\n          >\n            FAVORTIES: {cardCount}\n          </NavLink>\n        </button>\n      </section>\n      <section className=\"background-fade\" />\n    </div>\n  );\n};\n\nNav.propTypes = {\n  fetchData: PropTypes.func,\n  displayFavorites: PropTypes.func,\n  cardCount: PropTypes.number\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ScrollingText.css';\n\nexport const ScrollingText = ({\n  title,\n  release_date,\n  opening_crawl,\n  episode_id\n}) => {\n  return (\n    <div className=\"fade\">\n      <section className=\"star-wars\">\n        <div className=\"crawl\">\n          <div className=\"title\">\n            <h1>\n              Star Wars {episode_id}: {title}\n            </h1>\n            <p>{release_date}</p>\n          </div>\n          <p>{opening_crawl}</p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nScrollingText.propTypes = {\n   currentFilm: PropTypes.object\n}\n","import React from 'react';\nimport { Header } from '../Header/Header';\nimport { Nav } from '../Nav/Nav';\nimport { ScrollingText } from '../ScrollingText/ScrollingText';\n\nimport PropTypes from 'prop-types';\n\nexport const Home = props => {\n  const { fetchData, displayFavorites, currentFilm, cardCount } = props;\n  if (currentFilm) {\n    return (\n      <div className=\"home\">\n        <Header />\n        <Nav\n          fetchData={fetchData}\n          displayFavorites={displayFavorites}\n          cardCount={cardCount}\n        />\n        <ScrollingText {...currentFilm} />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"home\">\n        <Header />\n        <Nav\n          fetchData={fetchData}\n          displayFavorites={displayFavorites}\n          cardCount={cardCount}\n        />\n      </div>\n    );\n  }\n};\n\nHome.propTypes = {\n  fetchData: PropTypes.func,\n  displayFavorites: PropTypes.func,\n  currentFilm: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  cardCount: PropTypes.number\n};\n","export const fetchFilms = async () => {\n  const url = 'https://swapi.co/api/films/';\n  const response = await fetch(url);\n  if (response.ok) {\n    const films = await response.json();\n    return films;\n  } else {\n    throw new Error('films not fetched');\n  }\n};\n\nexport const fetchPeople = async () => {\n  const url = 'https://swapi.co/api/people/';\n  const response = await fetch(url);\n  if (response.ok) {\n    const people = await response.json();\n    return people;\n  } else {\n    throw new Error('people not fetched');\n  }\n};\n\nexport const fetchVehicles = async () => {\n  const url = 'https://swapi.co/api/vehicles/';\n  const response = await fetch(url);\n  if (response.ok) {\n    const vehicles = await response.json();\n    return vehicles;\n  } else {\n    throw new Error('vehicles not fetched');\n  }\n};\n\nexport const fetchPlanets = async () => {\n  const url = 'https://swapi.co/api/planets/';\n  const response = await fetch(url);\n  if (response.ok) {\n    const planets = await response.json();\n    return planets;\n  } else {\n    throw new Error('planets not fetched');\n  }\n};\n","export const getRandomFilm = filmArray => {\n  const randomNumber = Math.floor(Math.random() * 6);\n  return filmArray[randomNumber];\n};\n\nexport const cleanPeopleData = async peopleArray => {\n  const people = peopleArray.map(async person => {\n    const { homeworld, species } = person;\n\n    const fetches = [fetch(homeworld), fetch(species)];\n    const response = await Promise.all(fetches);\n\n    const parsedResponses = [response[0].json(), response[1].json()];\n\n    const parsedData = await Promise.all(parsedResponses);\n\n    const homeworldObj = parsedData[0];\n    const speciesObj = parsedData[1];\n\n    return {\n      name: person.name,\n      homeworld: homeworldObj.name,\n      population: homeworldObj.population,\n      species: speciesObj.name,\n      isFavorite: false,\n      category: 'people'\n    };\n  });\n  return Promise.all(people);\n};\n\nexport const cleanVehicleData = async vehiclesArray => {\n  const vehicles = await vehiclesArray.map(async vehicle => {\n    return {\n      name: vehicle.name,\n      model: vehicle.model,\n      class: vehicle.vehicle_class,\n      passengers: vehicle.passengers,\n      isFavorite: false,\n      category: 'vehicles'\n    };\n  });\n  return Promise.all(vehicles);\n};\n\nexport const cleanPlanetsData = async planetsArray => {\n  const planets = await planetsArray.map(async planet => {\n    const { residents } = planet;\n    const promisedPeople = residents.map(async resident => {\n      const response = await fetch(resident);\n      const data = await response.json();\n      return data.name;\n    });\n\n    const resolvedResidents = await Promise.all(promisedPeople);\n\n    return {\n      name: planet.name,\n      terrain: planet.terrain,\n      population: planet.population,\n      climate: planet.climate,\n      residents: resolvedResidents,\n      isFavorite: false,\n      category: 'planets'\n    };\n  });\n  return Promise.all(planets);\n};\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport { CardContainer } from '../CardContainer/CardContainer';\nimport { Home } from '../Home/Home';\n\nimport * as API from '../../helpers/apiCalls';\nimport * as Helper from '../../helpers/Helper';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      films: [],\n      people: [],\n      planets: [],\n      vehicles: [],\n      filmCount: '',\n      currentFilm: {},\n      errorStatus: false,\n      displayData: ''\n    };\n  }\n\n  async componentDidMount(buttonName) {\n    this.getStoredData();\n    const { films } = this.state;\n    if (films.length === 0) {\n      try {\n        const films = await API.fetchFilms();\n        this.loadFilmData(films.results);\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n  }\n\n  fetchData = async e => {\n    const { people, planets, vehicles } = this.state;\n    if (e.target.name === 'people') {\n      this.setPeopleData(people);\n    } else if (e.target.name === 'planets') {\n      this.setPlanetsData(planets);\n    } else if (e.target.name === 'vehicles') {\n      this.setVehicleData(vehicles);\n    } else if (e.target.name === 'favorites') {\n      this.setState({\n        displayData: 'favorites'\n      });\n    }\n  };\n\n  setPeopleData = async peopleArray => {\n    if (peopleArray.length === 0) {\n      try {\n        const people = await API.fetchPeople();\n        this.loadPeopleData(people.results);\n      } catch (err) {\n        console.log(err.message);\n      }\n    } else {\n      this.setState({\n        displayData: 'people'\n      });\n    }\n  };\n\n  setPlanetsData = async planetsArray => {\n    if (planetsArray.length === 0) {\n      try {\n        const planets = await API.fetchPlanets();\n        this.loadPlanetData(planets.results);\n      } catch (err) {\n        console.log(err.message);\n      }\n    } else {\n      this.setState({\n        displayData: 'planets'\n      });\n    }\n  };\n\n  setVehicleData = async vehicleArray => {\n    if (vehicleArray.length === 0) {\n      try {\n        const vehicles = await API.fetchVehicles();\n        this.loadVehicleData(vehicles.results);\n      } catch (err) {\n        console.log(err.message);\n      }\n    } else {\n      this.setState({\n        displayData: 'vehicles'\n      });\n    }\n  };\n\n  loadFilmData = filmsArray => {\n    const currentFilm = Helper.getRandomFilm(filmsArray);\n\n    this.storeArrayData(filmsArray, 'films');\n    this.setState({\n      films: filmsArray.results,\n      filmCount: filmsArray.count,\n      currentFilm\n    });\n  };\n\n  loadPeopleData = async peopleArray => {\n    const displayData = await Helper.cleanPeopleData(peopleArray);\n\n    this.storeArrayData(displayData, 'people');\n    this.setState({\n      people: displayData\n    });\n  };\n\n  loadVehicleData = async vehiclesArray => {\n    const displayData = await Helper.cleanVehicleData(vehiclesArray);\n\n    this.storeArrayData(displayData, 'vehicles');\n    this.setState({\n      vehicles: displayData\n    });\n  };\n\n  loadPlanetData = async planetsArray => {\n    const displayData = await Helper.cleanPlanetsData(planetsArray);\n\n    this.storeArrayData(displayData, 'planets');\n    this.setState({\n      planets: displayData\n    });\n  };\n\n  storeArrayData = (array, key) => {\n    localStorage.setItem(key, JSON.stringify(array));\n  };\n\n  getStoredData = () => {\n    const keys = Object.keys(localStorage);\n    keys.forEach(key => {\n      const array = localStorage.getItem(key);\n      const data = JSON.parse(array);\n      this.setState({\n        [key]: data\n      });\n    });\n  };\n\n  toggleFavorite = card => {\n    const category = card.category;\n    const array = this.state[category].map(cardObject => {\n      if (cardObject.name === card.name) {\n        return { ...cardObject, isFavorite: !cardObject.isFavorite };\n      } else {\n        return cardObject;\n      }\n    });\n    this.storeArrayData(array, category);\n    this.setState({\n      [category]: array\n    });\n  };\n\n  displayFavorites = () => {\n    const { people, planets, vehicles } = this.state;\n    const favPeople = people.filter(person => person.isFavorite);\n    const favPlanets = planets.filter(planet => planet.isFavorite);\n    const favVehicles = vehicles.filter(vehicle => vehicle.isFavorite);\n\n    return [...favPeople, ...favPlanets, ...favVehicles];\n  };\n\n  render() {\n    const { currentFilm, displayData } = this.state;\n    let data = [];\n    let favorites = this.displayFavorites();\n\n    if (displayData.length > 0) {\n      return (\n        <div className=\"App\">\n          <Route\n            path={'/:category'}\n            render={({ match }) => {\n              const { category } = match.params;\n              let data;\n              if (category === 'favorites') {\n                data = this.displayFavorites();\n              } else {\n                data = this.state[category];\n              }\n\n              if (category === 'home') {\n                return (\n                  <Home\n                    fetchData={this.fetchData}\n                    displayFavorites={this.displayFavorites}\n                    cardCount={favorites.length}\n                    currentFilm={currentFilm}\n                  />\n                );\n              } else {\n                return (\n                  <div>\n                    <Home\n                      fetchData={this.fetchData}\n                      displayFavorites={this.displayFavorites}\n                      cardCount={favorites.length}\n                    />\n                    <CardContainer\n                      displayData={data}\n                      toggleFavorite={this.toggleFavorite}\n                      cardCount={data.length}\n                    />\n                  </div>\n                );\n              }\n            }}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <Home\n            fetchData={this.fetchData}\n            displayFavorites={this.displayFavorites}\n            currentFilm={currentFilm}\n            cardCount={data.length}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\nReactDOM.render(router, document.getElementById('root'));\n"],"sourceRoot":""}